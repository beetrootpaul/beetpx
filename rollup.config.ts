import { dts as pluginDts } from "rollup-plugin-dts";

// Here we take all `.d.ts` files generated by `tsc` and combine them into a single one.
//   Why? In order to eliminate `export` statements that are needed between multiple `.d.ts`
//   file, but not needed for a final public API of this BeetPx framework.
//   In other words, we want framework users to
//     import { BpxRgbColor } from "@beetpx/beetpx";
//   but not
//     import { BpxRgbColor } from "@beetpx/beetpx/dist/color/RgbColor";
//   .
const config = [
  {
    input: "./.dist/index.d.ts",
    output: [{ file: "./dist/index.d.ts", format: "es" }],
    plugins: [
      pluginDts({
        // Sadly, pointing to the correct tsconfig files does not prevent
        //   dts plugin from typechecking test files inside `src/`, while
        //   they should not bother it at all (because `./.dist/index.d.ts`
        //   is the input, and not `./src/index.ts`).
        // But still, let's provide the plugin with the correct
        //   tsconfig and not the default one.
        tsconfig: "tsconfig.compile-all-no-comments.json",
      }),
    ],
  },
];

export default config;
